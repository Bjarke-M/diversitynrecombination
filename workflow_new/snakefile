import yaml

# Load the configuration file
configfile: "config.yaml"

# Access configuration values
species = config["species"]
batch = config["batch"]
ref = config["ref"]
liftover_method = ['gatk','crossmap']


######### Command to run the pipeline for the new data #########
# snakemake

######### import the rules from the rules file #########

### Rule for subsetting and preparing the gVCFs ###
#   Concatenate the different batches before liftover.
#   Prepare gVCFs for callability mask. 
#   Filter monomorphic sites for downstream analysis. 
include: "rules/subset_gvcfs.smk"

### Rule for liftover ###
#   Liftover the gVCFs to the hg38 reference genome.
#   Liftover the gVCFs to the hg38 reference genome using Crossmap.
include: "rules/liftover.smk"

# TODO: Add rule for callability mask
### Rule for callability mask ###
#   Prepare the callability mask for the gVCFs.  
#include: "rules/callability_mask.smk"

# TODO: Add rule for windowbased summary statistics
### Rule for getting windowbased summary statistics ###
#   Get summary statistics for the VCFs.
#   Estimate windowbased Pi and Tajima's D.
#include: "rules/windowbased_stats.smk"

# Define the pipeline
rule all:
    input:
        ## Output specific to the subset_gvcfs.smk file
        ##### Prepare VCFs #####
        expand('../data1/{species}/{species}_gt.vcf.gz', species=species),

        ## Output specific to the liftover.smk file
        ##### Gatk liftover #####
        expand('../data1/liftover/gatk/{ref}/{species}_liftover.vcf.gz', zip, ref=[ref[s] for s in species],species=species),
        ##### Crossmap liftover #####
        expand('../data1/liftover/crossmap/{ref}/{species}_liftover.vcf.gz', zip, ref=[ref[s] for s in species],species=species),

        ## Output specific to the callability_mask.smk file
        ##### Prepare callability mask #####

        ## Output specific to the windowbased_stats.smk file
        ##### Windowbased summary statistics #####
        expand('../results1/windowed_stats/{method}/{ref}/{species}.windowed.pi', method=liftover_method, ref=[ref[s] for s in species],species=species),



######### Very general rules ######### 
# create a bgzip compressed VCF files
rule bgzip_vcf:
    input:
        '{path}.vcf'
    output:
        '{path}.vcf.gz'
    conda:
        'envs/samtools.yaml'
    shell:
        """
        bgzip -c {input} > {output}
        """

# create a csi index for VCF files
rule create_csi:
    input:
        "{path}.vcf.gz"
    output:
        "{path}.vcf.gz.csi"
    conda:
        'envs/bcftools.yaml'
    shell:
        """
        bcftools index -f {input}
        """


# ######### Command to run the pipeline for the old data format #########
# # snakemake

# ######### import the rules from the rules file #########
# # Rule for subsetting the gVCFs to species. 
# #   Prepare gVCFs for callability mask. 
# #   Filter monomorphic sites for downstream analysis. 
# #include: "rules/subset_gvcfs.smk"

# # Define the pipeline
# rule all:
#     input:
        